stages:
  - automated-testing
  - integration

#
# v1-infra-core
# AT Environment
#

v1-infra-core-automated-testing-step-0:
  stage: automated-testing
  image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
  script:
    - terraform --version
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" init -backend-config="prefix=terraform/state/environments/at"
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" plan -var="env=at" -var="GitLabServiceAccountEmail=${SERVICE_ACCOUNT_EMAIL}"

v1-infra-core-automated-testing-step-1:
  stage: automated-testing
  needs:
    - job: v1-infra-core-automated-testing-step-0
  image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
  script:
    - terraform --version
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" init -backend-config="prefix=terraform/state/environments/at"
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" apply -var="env=at" -var="GitLabServiceAccountEmail=${SERVICE_ACCOUNT_EMAIL}" -auto-approve
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/ refresh -var="env=at" -var="GitLabServiceAccountEmail=${SERVICE_ACCOUNT_EMAIL}"
    - echo $(terraform output -raw GKE_CLUSTER_NAME)
    - echo $(terraform output -raw GKE_CLUSTER_REGION)
    - echo $(terraform output -raw GKE_CLUSTER_PROJECT)
    - echo "GKE_CLUSTER_NAME=$(terraform output -raw GKE_CLUSTER_NAME)" >> build.env
    - echo "GKE_CLUSTER_REGION=$(terraform output -raw GKE_CLUSTER_REGION)" >> build.env
    - echo "GKE_CLUSTER_PROJECT=$(terraform output -raw GKE_CLUSTER_PROJECT)" >> build.env
  artifacts: 
    reports:
      dotenv: build.env

v1-infra-core-automated-testing-step-2:
  stage: automated-testing
  needs:
    - job: v1-infra-core-automated-testing-step-1
      artifacts: true
  image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
  script:
    - echo "$GKE_CLUSTER_NAME"
    - echo "$GKE_CLUSTER_REGION"
    - echo "$GKE_CLUSTER_NAME"
    #- gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --region="${GKE_CLUSTER_REGION}" --project="${GKE_CLUSTER_PROJECT}"
    #- kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/namespace.yaml
    #- kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/install-manifests.yaml



#
# v1-infra-core
# INT Environment
#

# v1-infra-core-integration-step-0:
#   stage: integration
#   image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
#   script:
#     - terraform --version
#     - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" init -backend-config="prefix=terraform/state/environments/int"
#     - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" plan -var="env=int" -var="GitLabServiceAccountEmail=${SERVICE_ACCOUNT_EMAIL}"

# v1-infra-core-integration-step-1:
#   stage: integration
#   needs:
#     - job: v1-infra-core-integration-step-0
#   image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
#   script:
#     - terraform --version
#     - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" init -backend-config="prefix=terraform/state/environments/int"
#     - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" apply -var="env=int" -var="GitLabServiceAccountEmail=${SERVICE_ACCOUNT_EMAIL}" -auto-approve

# v1-infra-core-integration-step-2:
#   stage: integration
#   needs:
#     - job: v1-infra-core-integration-step-1
#       artifacts: true
#   image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
#   script:
#     - gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --region="${GKE_CLUSTER_REGION}" --project="${GKE_CLUSTER_PROJECT}"
#     - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/namespace.yaml
#     - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/install-manifests.yaml