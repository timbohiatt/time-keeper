#===========================================================================================================================
#     Demo:         v1-infra-core
#     Description:  Single GKE Cluster, With Self Managed Istio
#     Pipeline:     GCP Infrastructure Core Pipeline (Manages GKE Clusters, Networking & Istio Service Mesh Install) 
#===========================================================================================================================

#
# v1-infra-core
# AT (Automated Testing) Environment
#
v1-infra-core-automated-testing-step-0:
  stage: automated-testing
  image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    #- if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "develop"'
      when: on_success
      #changes:
        #- /**/*
  variables:
    TK_ENV: "at"
  script:
    - terraform --version
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" init -backend-config="prefix=terraform/state/environments/${TK_ENV}"
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" plan -var="env=${TK_ENV}" -var="GitLabServiceAccountEmail=${SERVICE_ACCOUNT_EMAIL}"

v1-infra-core-automated-testing-step-1:
  stage: automated-testing
  needs:
    - job: v1-infra-core-automated-testing-step-0
  image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    #- if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "develop"'
      when: on_success
      #changes:
        #- /**/*
  variables:
    TK_ENV: "at"
  script:
    - terraform --version
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" init -backend-config="prefix=terraform/state/environments/${TK_ENV}"
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" apply -var="env=${TK_ENV}" -var="GitLabServiceAccountEmail=${SERVICE_ACCOUNT_EMAIL}" -auto-approve
    - terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" refresh -var="env=${TK_ENV}" -var="GitLabServiceAccountEmail=${SERVICE_ACCOUNT_EMAIL}"
    - echo "GKE_CLUSTER_NAME=$(terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" output -raw GKE_CLUSTER_NAME)" >> build.env
    - echo "GKE_CLUSTER_REGION=$(terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" output -raw GKE_CLUSTER_REGION)" >> build.env
    - echo "GKE_CLUSTER_PROJECT=$(terraform -chdir="demos/v1-self-managed/time-keeper-gcp/" output -raw GKE_CLUSTER_PROJECT)" >> build.env
  artifacts: 
    reports:
      dotenv: build.env

v1-infra-core-automated-testing-step-2:
  stage: automated-testing
  needs:
    - job: v1-infra-core-automated-testing-step-1
      artifacts: true
  image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    #- if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "develop"'
      when: on_success
      #changes:
        #- /**/*
  variables:
    TK_ENV: "at"
  script:
    - echo "$GKE_CLUSTER_NAME"
    - echo "$GKE_CLUSTER_REGION"
    - echo "$GKE_CLUSTER_NAME"
    - gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --region="${GKE_CLUSTER_REGION}" --project="${GKE_CLUSTER_PROJECT}"
    - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/namespace.yaml
    - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/install-manifests.yaml || true
    - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/install-manifests.yaml || true
    - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/kiali.yaml || true
    - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/prometheus.yaml || true
    - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/jaeger.yaml || true
    - kubectl apply -f demos/v1-self-managed/time-keeper-infra/manifests/istio/zipkin.yaml || true

#
# Break into Ops & Developers Pipeline
#
v1-infra-core-automated-testing-step-3:
  stage: automated-testing
  needs:
    - job: v1-infra-core-automated-testing-step-2
    - job: v1-infra-core-automated-testing-step-1
      artifacts: true
  image: gcr.io/tk-automation-1483/time-keeper-cicd:v1.1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    #- if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "develop"'
      when: on_success
      #changes:
        #- /**/*
  variables:
    TK_ENV: "at"
  script:
    - echo "$GKE_CLUSTER_NAME"
    - echo "$GKE_CLUSTER_REGION"
    - echo "$GKE_CLUSTER_NAME"
    - gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --region="${GKE_CLUSTER_REGION}" --project="${GKE_CLUSTER_PROJECT}"
    # Deploy Ops Manifests
    - kubectl apply -f demos/v1-self-managed/time-keeper-ops/manifests/namespaces --recursive
    - kubectl apply -f demos/v1-self-managed/time-keeper-ops/manifests/ --recursive
    # Deploy Dev Team Deployments
    - kubectl apply -f demos/v1-self-managed/time-keeper-projects/project-google/app-pasta/deployment --recursive
    - kubectl apply -f demos/v1-self-managed/time-keeper-projects/project-google/app-hello-world/deployment --recursive
    - kubectl apply -f demos/v1-self-managed/time-keeper-projects/project-google/app-bank-of-anthos/deployment --recursive
    - kubectl apply -f demos/v1-self-managed/time-keeper-projects/project-google/app-bookinfo/deployment --recursive -n app-bookinfo